#include "QuadTree.hpp"
#include <math.h>
#include <iostream>
#include <stdlib.h>

int main() {

    // create the atoms

    const unsigned int numberOfAtoms = 100;
    std::vector<Atom*> atomVector;

    double x[numberOfAtoms] = {
        0.840188 , 
        0.783099 , 
        0.911647 , 
        0.335223 , 
        0.277775 , 
        0.477397 , 
        0.364784 , 
        0.95223 , 
        0.635712 , 
        0.141603 , 
        0.0163006 , 
        0.137232 , 
        0.156679 , 
        0.12979 , 
        0.998925 , 
        0.512932 , 
        0.61264 , 
        0.637552 , 
        0.493583 , 
        0.292517 , 
        0.526745 , 
        0.400229 , 
        0.283315 , 
        0.807725 , 
        0.0697553 , 
        0.525995 , 
        0.192214 , 
        0.890233 , 
        0.0641713 , 
        0.457702 , 
        0.23828 , 
        0.902208 , 
        0.266666 , 
        0.375207 , 
        0.512535 , 
        0.531606 , 
        0.437638 , 
        0.93081 , 
        0.284293 , 
        0.639979 , 
        0.687861 , 
        0.440105 , 
        0.829201 , 
        0.228968 , 
        0.35036 , 
        0.956468 , 
        0.657304 , 
        0.43956 , 
        0.398437 , 
        0.684219 , 
        0.482491 , 
        0.950252 , 
        0.14766 , 
        0.641081 , 
        0.619596 , 
        0.786002 , 
        0.447034 , 
        0.187533 , 
        0.556444 , 
        0.169607 , 
        0.103171 , 
        0.495444 , 
        0.984752 , 
        0.684445 , 
        0.749771 , 
        0.29416 , 
        0.584489 , 
        0.15239 , 
        0.125475 , 
        0.164102 , 
        0.0745298 , 
        0.0525293 , 
        0.176211 , 
        0.797798 , 
        0.656564 , 
        0.639458 , 
        0.0934805 , 
        0.52021 , 
        0.0699064 , 
        0.46142 , 
        0.573319 , 
        0.0519388 , 
        0.999994 , 
        0.889956 , 
        0.997799 , 
        0.87054 , 
        0.00416161 , 
        0.593892 , 
        0.163131 , 
        0.913027 , 
        0.359095 , 
        0.57943 , 
        0.687387 , 
        0.530808 , 
        0.304295 , 
        0.576971 , 
        0.747809 , 
        0.0354209 , 
        0.833239 , 
        0.873271
    };
    double y[numberOfAtoms] = {
        0.394383 , 
        0.79844 , 
        0.197551 , 
        0.76823 , 
        0.55397 , 
        0.628871 , 
        0.513401 , 
        0.916195 , 
        0.717297 , 
        0.606969 , 
        0.242887 , 
        0.804177 , 
        0.400944 , 
        0.108809 , 
        0.218257 , 
        0.839112 , 
        0.296032 , 
        0.524287 , 
        0.972775 , 
        0.771358 , 
        0.769914 , 
        0.891529 , 
        0.352458 , 
        0.919026 , 
        0.949327 , 
        0.0860558 , 
        0.663227 , 
        0.348893 , 
        0.020023 , 
        0.0630958 , 
        0.970634 , 
        0.85092 , 
        0.53976 , 
        0.760249 , 
        0.667724 , 
        0.0392803 , 
        0.931835 , 
        0.720952 , 
        0.738534 , 
        0.354049 , 
        0.165974 , 
        0.880075 , 
        0.330337 , 
        0.893372 , 
        0.68667 , 
        0.58864 , 
        0.858676 , 
        0.92397 , 
        0.814767 , 
        0.910972 , 
        0.215825 , 
        0.920128 , 
        0.881062 , 
        0.431953 , 
        0.281059 , 
        0.307458 , 
        0.226107 , 
        0.276235 , 
        0.416501 , 
        0.906804 , 
        0.126075 , 
        0.760475 , 
        0.935004 , 
        0.383188 , 
        0.368664 , 
        0.232262 , 
        0.244413 , 
        0.732149 , 
        0.79347 , 
        0.745071 , 
        0.950104 , 
        0.521563 , 
        0.240062 , 
        0.732654 , 
        0.967405 , 
        0.759735 , 
        0.134902 , 
        0.0782321 , 
        0.204655 , 
        0.819677 , 
        0.755581 , 
        0.157807 , 
        0.204329 , 
        0.125468 , 
        0.0540576 , 
        0.0723288 , 
        0.923069 , 
        0.180372 , 
        0.39169 , 
        0.819695 , 
        0.552485 , 
        0.452576 , 
        0.0996401 , 
        0.757294 , 
        0.992228 , 
        0.877614 , 
        0.62891 , 
        0.747803 , 
        0.925377 , 
        0.831038
    };
    for (unsigned int i = 0; i < numberOfAtoms; i++) {
        atomVector.push_back(new Atom(x[i], y[i]));
    }

    // create the quad tree

    Rectangle r0(0.0, 1.0, 0.0, 1.0);
    QuadTree* quadTree = new QuadTree(atomVector, r0);

    // perfom a range search

    std::vector<Atom*> searchVector0;
    quadTree->rangeSearch(searchVector0, r0);
    std::cout << "Nombre d'atomes dans r0: " << searchVector0.size() << std::endl;

    Rectangle r1(0.7, 0.8, 0.4, 0.6);
    std::vector<Atom*> searchVector1;
    quadTree->rangeSearch(searchVector1, r1);
    std::cout << "Nombre d'atomes dans r1: " << searchVector1.size() << std::endl;

    Rectangle r2(0.2, 0.5, 0.5, 0.75);
    std::vector<Atom*> searchVector2;
    quadTree->rangeSearch(searchVector2, r2);
    std::cout << "Nombre d'atomes dans r2: " << searchVector2.size() << std::endl;

    return 0;

}

